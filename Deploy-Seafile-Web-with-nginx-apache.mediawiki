In a production environment, you often want to deploy Seafile Web(Seahub) behind a reverse proxy like Apache or nginx. Use a web server serves multiple purposes:

* Static files can be served by Apache/Nginx directly to achieve better performance.
* You need to use Apache/Nginx if you want to [[Enable Https on Seafie Web]].

Before continue, ensure that:

* you have installed the <code>python-flup</code> library
* you have '''NOT''' started seahub or seafile

== Deploy with nginx ==

Assume you are running seahub as the root domain, for example '''www.myseafile.com'''

This is a sample nginx config file.

<pre>
server {
    listen 80;
    server_name www.myseafile.com;
    location / {
        fastcgi_pass    127.0.0.1:8000;
        fastcgi_param   SCRIPT_FILENAME     $document_root$fastcgi_script_name;
        fastcgi_param   PATH_INFO           $fastcgi_script_name;

        fastcgi_param	SERVER_PROTOCOL		$server_protocol;
        fastcgi_param   QUERY_STRING        $query_string;
        fastcgi_param   REQUEST_METHOD      $request_method;
        fastcgi_param   CONTENT_TYPE        $content_type;
        fastcgi_param   CONTENT_LENGTH      $content_length;
        fastcgi_param	SERVER_ADDR         $server_addr;
        fastcgi_param	SERVER_PORT         $server_port;
        fastcgi_param	SERVER_NAME         $server_name;

        access_log      /var/log/nginx/seahub.access.log;
    	error_log       /var/log/nginx/seahub.error.log;
    }       

    location /media {
        root /path/to/seahub;
    }
}
</pre>

== Deploy With Apache ==

Before deploying with Apache, you need to configure Apache first, install and enable mod_fastcgi. 

Then edit httpd.conf file, add this line:

  FastCGIExternalServer /var/www/seahub.fcgi -host 127.0.0.1:8000

After that, assume you are running seahub as the root domain, for example '''www.myseafile.com'''

This is a sample apache config file.

<pre>
<VirtualHost *:80>
  ServerName www.myseafile.com
  DocumentRoot /var/www
  Alias /media  /home/user/haiwen/seafile-server-1.3.2/seahub/media         # path to your seahub media 
  RewriteEngine On
  RewriteRule ^/(media.*)$ /$1 [QSA,L,PT]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteRule ^/(.*)$ /seahub.fcgi/$1 [QSA,L]
</VirtualHost>
</pre>

== Start Seafile and Seahub ==

Before you start seafile and seahub, you first need to modify the file <code>ccnet.conf</code>.

=== Modify ccnet.conf ===

Modify the value of <code>SERVICE_URL</code> in <code>/data/haiwen/ccnet/ccnet.conf</code>

<pre>
SERVICE_URL = http://www.myseafile.com
</pre>

'''Note: '''If you later change the domain assigned to seahub, you also need to change the value of  <code>SERVICE_URL</code>.

=== Start Seafile Server ===

Now you can start seafile server by 
<pre>./seafile.sh</pre> 

After seafile is started, then start seahub as following.

=== Start Seahub (when using the pre-compiled server package) ===

Assume you have followed the steps in [[Download and Setup Seafile Server]], please run commands as follows:

<pre>
seafile_prefix=/data/haiwen/seafile-server-1.3.0 # your seafile server directory
export PYTHONPATH=${seafile_prefix}/seafile/lib/python2.6/site-packages:${seafile_prefix}/seafile/lib64/python2.6/site-packages:${seafile_prefix}/seafile/lib/python2.7/site-packages:${seafile_prefix}/seahub/thirdpart:$PYTHONPATH
export LD_LIBRARY_PATH=${seafile_prefix}/seafile/lib/:${seafile_prefix}/seafile/lib64:${LD_LIBRARY_PATH}
export CCNET_CONF_DIR=/data/haiwen/ccnet # directory store your ccnet.conf

cd ${seafile_prefix}/seahub
python ./manage.py runfcgi host=127.0.0.1 port=8000 errlog=/tmp/seahub-stderr.log outlog=/tmp/seahub-stdout.log
</pre>

=== Start seahub (when building seafile server from source) ===

Assume you have followed the steps of [[Build and Deploy Seafile Server from source]], and you have uncompressed seahub to <code>/data/haiwen/seahub/</code>

<pre>
export CCNET_CONF_DIR=/path/to/your/ccnet/conf/dir
export PYTHONPATH=/data/haiwen/seahub/thirdpart:$PYTHONPATH

cd /data/haiwen/seahub
python ./manage.py runfcgi host=127.0.0.1 port=8000 \
 errlog=/tmp/seahub-stderr.log outlog=/tmp/seahub-stdout.log
</pre>

=== Restart script ===

To easily restart your seahub, try this small script:

<pre>
#!/bin/bash

SCRIPT=$(readlink -f "$0")

SEAFILE_PREFIX=$(dirname "${SCRIPT}")
SEAHUB_DIR="${SEAFILE_PREFIX}/seahub"
PIDFILE="${SEAHUB_DIR}/seahub.pid"

cd ${SEAHUB_DIR}
if [ -f $PIDFILE ]; then
    kill `cat -- $PIDFILE`
    rm -f -- $PIDFILE
fi

export PYTHONPATH=${SEAFILE_PREFIX}/seafile/lib/python2.6/site-packages:${SEAFILE_PREFIX}/seafile/lib64/python2.6/site-packages:${SEAFILE_PREFIX}/seafile/lib/python2.7/site-packages:${SEAFILE_PREFIX}/seahub/thirdpart:$PYTHONPATH
export LD_LIBRARY_PATH=${SEAFILE_PREFIX}/seafile/lib/:${SEAFILE_PREFIX}/seafile/lib64:${LD_LIBRARY_PATH}
export CCNET_CONF_DIR=${SEAFILE_PREFIX}/../ccnet
./manage.py runfcgi host=127.0.0.1 port=8000 pidfile=$PIDFILE errlog=/tmp/seahub.error

</pre>

Put this script at the same directory with seafile.sh and seahub.sh. Then you can easily restart your seahub
fcgi daemon by <pre>./restart.sh</pre>