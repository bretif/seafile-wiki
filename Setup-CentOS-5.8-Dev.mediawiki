== System Admin ==

=== Create a non-root user ===
<pre>
useradd -d /home/plt -m -p hello123 -s /bin/bash plt
</pre>

Add this user to sudoer list:
<pre>
/usr/sbin/visudo
</pre>

Add a line <code>plt     ALL=(ALL)       ALL</code> under the line <code>root     ALL=(ALL)       ALL
</code>

=== Add EPEL to yum repository ===

[http://fedoraproject.org/wiki/EPEL EPEL]: Extra Packages for Enterprise Linux 

<pre>
cd /tmp
wget http://mirror.nus.edu.sg/Fedora/epel/5/i386/epel-release-5-4.noarch.rpm
sudo rpm -ivh epel-release-5-4.noarch.rpm
</pre>

=== Install packages ===

<pre>
sudo yum install gcc gcc-c++ openssl-devel python26-devel libffi-devel re2c flex mysql-devel
</pre>

Set python2.6 as the default:
<pre>
cd /usr/local/bin
sudo ln -f /usr/bin/python2.6
</pre>


== Install library dependencies ==

* The version of some libraries are too old on CentOS 5.8, so that we need to build an up-to-date version of each of them.
* To seperate system libraries from the libraries we build, we install it to '''/opt'''.

Change the owner of <code>/opt</code> to plt:
<pre>
sudo chown -R plt:plt /opt
</pre>

Add the following lines to <code>~/.bashrc</code>:

<pre>
export PKG_CONFIG_PATH=/opt/lib/pkgconfig:/opt/lib64/pkgconfig:$PKG_CONFIG_PATH
export LD_LIBRARY_PATH=/opt/lib:/opt/lib64:$LD_LIBRARY_PATH
export PATH=/opt/bin:$PATH
export CMAKE_PREFIX_PATH=/opt:$CMAKE_PREFIX_PATH

export CPPFLAGS="-I/opt/include $CPPFLAGS"
export LDFLAGS="-L/opt/lib -L/opt/lib64 $LDFLAGS"
</pre>

=== openssl ===

openssl > 0.9.8k is required.

# Download the source of the stable version from  [http://www.openssl.org/source/]
# build

<pre>
./config --prefix=/opt shared
make
make install
</pre>

=== GLib ===

Glib > 2.24 is required.

# download the source of the stable version from [http://developer.gnome.org/glib/]
# build and install

<pre>
./configure --prefix=/opt
make
make install
</pre>

=== libevent ===

libevent > 2.0 is required.

# download source of the stable version from [http://libevent.org]
# build and install

<pre>
./configure --prefix=/opt
make
make install
</pre>

=== CMake ===

CMake > 2.8 is required. We need it to build <code>libevhtp</code>(see below).

# download the source of the stable version from [http://www.cmake.org/cmake/resources/software.html]
# build and install

<pre>
./bootstrap --prefix=/opt
make 
make install
</pre>

=== libevhtp ===

libevhtp is a http server libary on top of libevent. We used it in httpserver.

# download the latest from [https://github.com/ellzey/libevhtp/tags]
# build and install

<pre>
cmake .
make 
sudo make install
</pre>

''Note'': The above commands would install <code>libevhtp</code> to <code>/usr/local</code>. As I write this(''2012.11.28''), the cmake configuration of <code>libevhtp</code> does not support the <code>CMAKE_INSTALL_PREFIX</code> setting. Otherwise we can do this to install it to <code>/opt</code>

<pre>
cmake -DCMAKE_INSTALL_PREFIX=/opt .
make 
sudo make install
</pre>

''Note on 32-bit systems'': As I write this(''2012.12.03''), <code>libevhtp/evthr/evthr.c</code> uses the atomic function <code>__sync_fetch_add_add</code>, which requires the <code>-march=i486</code> flag to be added, otherwise a link error would be raised. see [http://stackoverflow.com/questions/130740/link-error-when-compiling-gcc-atomic-operation-in-32-bit-mode]

<pre>
cmake -DCMAKE_C_FLAGS="-march=i486 $CPPFLAGS" .
make 
sudo make install
</pre>

=== sqlite3 ===

# download the source of the stable version from [http://www.sqlite.org/download.html]
# build and install
<pre>
./configure --prefix=/opt
make
make install
</pre>

=== libzdb ===

<code>libzdb</code> provides a consistent API to various database backends, including sqlite/mysql/pg/oracle. It's used by ccnet-server and seafile-server.

# download libzdb from [http://www.tildeslash.com/libzdb/dist/libzdb-2.10.5.tar.gz]
# build and install

''Note'': Ensure <code>sqlite3</code> is built and installed before building libzdb.
<pre>
./configure --prefix=/opt
make
make install
</pre>
