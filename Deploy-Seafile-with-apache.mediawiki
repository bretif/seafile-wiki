Before continuing, ensure that:

* you have installed the <code>python-flup</code> library
* you have '''NOT''' started seahub or seafile

== Deploy seahub With Apache ==

Before deploying with Apache, you need to configure Apache first. Install and enable mod_fastcgi and also enable mod_rewrite (which is usually installed by default).

Then edit httpd.conf file, add this line:

  FastCGIExternalServer /var/www/seahub.fcgi -host 127.0.0.1:8000

After that, assume you are running seahub as the root domain, for example '''www.myseafile.com'''. Note, "/var/www/seahub.fcgi" is just a placeholder, you don't need to actually have this file in your system.

This is a sample apache config file.

<pre>
<VirtualHost *:80>
  ServerName www.myseafile.com
  DocumentRoot /var/www
  Alias /media  /home/user/haiwen/seafile-server-1.6.1/seahub/media         
  RewriteEngine On
  RewriteRule ^/(media.*)$ /$1 [QSA,L,PT]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteRule ^(.*)$ /seahub.fcgi$1 [QSA,L,E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
</VirtualHost>
</pre>

Note: HTTP_AUTHORIZATION is used in API authorization

== Deploy Httpserver behind Apache ==

In seafile, Httpserver is used to handle raw file uploading/downloading through browsers. By default, it listens on port 8082 for http request. You may want to deploy httpserver behind nginx/apache because:

* Your server is befind a firewall, and you don't want open too many ports in the firewall
* You want to enable HTTPS on httpserver.

If you want to deploy httpserver behind nginx/apache, follow the steps below.

We assume your domain name is '''http://www.myseafile.com''', and here we deploy httpserver to the '''/seafhttp''' path.

* Apache:
Enable proxy_http:
```
a2enmod proxy_http
```

Append these lines to your VirtualHost configuration(before fastcgi config):
```
ProxyPass /seafhttp http://127.0.0.1:8082
ProxyPassReverse /seafhttp http://127.0.0.1:8082

RewriteEngine On
RewriteRule ^/seafhttp - [QSA,L]
```

== Sample config ==

Here is sample config after merging above lines:

<pre>
<VirtualHost *:80>
  ServerName www.myseafile.com
  DocumentRoot /var/www
  Alias /media  /home/user/haiwen/seafile-server-1.6.1/seahub/media         

  RewriteEngine On

  RewriteRule ^/(media.*)$ /$1 [QSA,L,PT]

  #
  # seafile httpserver
  #
  ProxyPass /seafhttp http://127.0.0.1:8082
  ProxyPassReverse /seafhttp http://127.0.0.1:8082
  RewriteRule ^/seafhttp - [QSA,L]

  #
  # seahub
  #
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteRule ^(.*)$ /seahub.fcgi$1 [QSA,L,E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
</VirtualHost>
</pre>

=== Modify seahub_settings.py ===

You need to add a line in <code>seahub_settings.py</code> to set the value of `HTTP_SERVER_ROOT`

```python
HTTP_SERVER_ROOT = 'http://www.myseafile.com/seafhttp'
```

'''Note''': If later for some reason you don't deploy httpserver behind nginx/apache anymore, remember to remove the line you have added above!

== Start Seafile and Seahub ==

Before you start seafile and seahub, you first need to modify the file <code>ccnet.conf</code>.

=== Modify ccnet.conf ===

Modify the value of <code>SERVICE_URL</code> in <code>/data/haiwen/ccnet/ccnet.conf</code>

<pre>
SERVICE_URL = http://www.myseafile.com
</pre>

'''Note: '''If you later change the domain assigned to seahub, you also need to change the value of  <code>SERVICE_URL</code>.

=== Start Seafile/Seahub (when using the pre-compiled server package) ===

Assume you have followed the steps in [[Download and Setup Seafile Server]], please run commands as follows:

<pre>
./seafile.sh start
./seahub.sh start-fastcgi
</pre>

=== Start Seafile/Seahub (when building seafile server from source) ===

Assume you have followed the steps of [[Build and Deploy Seafile Server from source]]. To start seafile, and start seahub in fastcgi mode, you should:

<pre>
seafile-admin start --fastcgi
</pre>

The default port is <code>8000</code>, to use another port, just append a <code>--port</code> argument:

<pre>
seafile-admin start --fastcgi --port [PORT]
</pre>

== Notes when Upgrading Seafile Server ==

When [[upgrading seafile server]], besides the normal steps you should take, there is one extra step to do: '''Update the path of the static files in your nginx/apache configuration'''. For example, assume your are upgrading seafile server 1.3.0 to 1.4.0, then:

```
  Alias /media  /home/user/haiwen/seafile-server-1.4.0/seahub/media
```

== Deploy Seafile at Non-root domain ==

See [[Deploy Seafile Web at Non root domain]]
