Before continuing, ensure that:

* you have installed the <code>python-flup</code> library
* you have '''NOT''' started seahub or seafile

== Deploy Seahub With Apache ==

Before deploying with Apache, you need to configure Apache first. Install and enable mod_fastcgi and also enable mod_rewrite (which is usually installed by default).

Then edit httpd.conf file, add this line:

  FastCGIExternalServer /var/www/seahub.fcgi -host 127.0.0.1:8000

Note, "/var/www/seahub.fcgi" is just a placeholder, you don't need to actually have this file in your system.

Assume you are running Seahub using domain '''www.myseafile.com'''. This is a sample Apache config file.

<pre>
<VirtualHost *:80>
  ServerName www.myseafile.com
  DocumentRoot /var/www
  Alias /media  /home/user/haiwen/seafile-server-1.8.0/seahub/media         
  RewriteEngine On
  RewriteRule ^/(media.*)$ /$1 [QSA,L,PT]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteRule ^(.*)$ /seahub.fcgi$1 [QSA,L,E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
</VirtualHost>
</pre>

Note: HTTP_AUTHORIZATION is used in API authorization

=== Modify ccnet.conf ===

You need to modify the value of <code>SERVICE_URL</code> in <code>/data/haiwen/ccnet/ccnet.conf</code>
to let Seafile know the domain you choose.

<pre>
SERVICE_URL = http://www.myseafile.com
</pre>

'''Note: '''If you later change the domain assigned to seahub, you also need to change the value of  <code>SERVICE_URL</code>.

== Deploy HttpServer behind Apache ==

In Seafile, HttpServer is used to handle raw file uploading/downloading through browsers. By default, it listens on port 8082 for HTTP request. Here we use Apache reverse proxy to deploy HttpServer behind Apache.

We assume your domain name is '''http://www.myseafile.com''', and here we deploy HttpServer to the '''/seafhttp''' path.

Enable proxy_http:
```
a2enmod proxy_http
```

Append these lines to your VirtualHost configuration(before fastcgi config):
```
ProxyPass /seafhttp http://127.0.0.1:8082
ProxyPassReverse /seafhttp http://127.0.0.1:8082

RewriteEngine On
RewriteRule ^/seafhttp - [QSA,L]
```

=== Modify seahub_settings.py ===

You need to add a line in <code>seahub_settings.py</code> to set the value of `HTTP_SERVER_ROOT`

```python
HTTP_SERVER_ROOT = 'http://www.myseafile.com/seafhttp'
```

== Sample config ==

Here is final sample config:

<pre>
<VirtualHost *:80>
  ServerName www.myseafile.com
  DocumentRoot /var/www
  Alias /media  /home/user/haiwen/seafile-server-1.6.1/seahub/media         

  RewriteEngine On

  #
  # seafile httpserver
  #
  ProxyPass /seafhttp http://127.0.0.1:8082
  ProxyPassReverse /seafhttp http://127.0.0.1:8082
  RewriteRule ^/seafhttp - [QSA,L]

  #
  # seahub
  #
  RewriteRule ^/(media.*)$ /$1 [QSA,L,PT]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteRule ^(.*)$ /seahub.fcgi$1 [QSA,L,E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
</VirtualHost>
</pre>



== Start Seafile and Seahub ==

<pre>
./seafile.sh start
./seahub.sh start-fastcgi
</pre>

== Notes when Upgrading Seafile Server ==

When [[upgrading seafile server]], besides the normal steps you should take, there is one extra step to do: '''Update the path of the static files in your Nginx/Apache configuration'''. For example, assume your are upgrading seafile server 1.3.0 to 1.4.0, then:

```
  Alias /media  /home/user/haiwen/seafile-server-1.4.0/seahub/media
```
