Before continuing, ensure that:

* you have installed the <code>python-flup</code> library
* you have '''NOT''' started seahub or seafile

== Deploy Seahub with nginx ==

Assume you are running seahub as the root domain, for example '''www.myseafile.com'''

This is a sample nginx config file.

<pre>
server {
    listen 80;
    server_name www.myseafile.com;
    location / {
        fastcgi_pass    127.0.0.1:8000;
        fastcgi_param   SCRIPT_FILENAME     $document_root$fastcgi_script_name;
        fastcgi_param   PATH_INFO           $fastcgi_script_name;

        fastcgi_param	SERVER_PROTOCOL		$server_protocol;
        fastcgi_param   QUERY_STRING        $query_string;
        fastcgi_param   REQUEST_METHOD      $request_method;
        fastcgi_param   CONTENT_TYPE        $content_type;
        fastcgi_param   CONTENT_LENGTH      $content_length;
        fastcgi_param	SERVER_ADDR         $server_addr;
        fastcgi_param	SERVER_PORT         $server_port;
        fastcgi_param	SERVER_NAME         $server_name;

        access_log      /var/log/nginx/seahub.access.log;
    	error_log       /var/log/nginx/seahub.error.log;
    }       

    location /media {
        root /home/user/haiwen/seafile-server-1.6.1/seahub;
    }
}
</pre>

== Deploy Httpserver with Nginx ==

In seafile, Httpserver is used to handle raw file uploading/downloading through browsers. By default, it listens on port 8082 for http request. You may want to deploy httpserver behind nginx/apache because:

* Your server is befind a firewall, and you don't want open too many ports in the firewall
* You want to enable HTTPS on httpserver.

If you want to deploy httpserver behind nginx/apache, follow the steps below.

We assume your domain name is '''http://www.myseafile.com''', and here we deploy httpserver to the '''/seafhttp''' path.

=== modify nginx configuration ===


```nginx
    location /seafhttp {
        rewrite ^/seafhttp(.*)$ $1 break;
        proxy_pass https://127.0.0.1:8082;
        client_max_body_size 0;
    }
```

nginx settings "client_max_body_size" is by default 1m.
Uploading a file bigger than this limit will give you an error message HTTP error code 413 ("Request Entity Too Large").

You should use 0 to disable this feature or write the same value than for the parameter max_upload_size in section [httpserver] of /seafile/seafile-data/seafile.conf

=== modify seahub_settings.py ===

You need to add a line in <code>seahub_settings.py</code> to set the value of `HTTP_SERVER_ROOT`

```python
HTTP_SERVER_ROOT = 'http://www.myseafile.com/seafhttp'
```

'''Note''': If later for some reason you don't deploy httpserver behind nginx/apache anymore, remember to remove the line you have added above!

== Start Seafile and Seahub ==

Before you start seafile and seahub, you first need to modify the file <code>ccnet.conf</code>.

=== Modify ccnet.conf ===

Modify the value of <code>SERVICE_URL</code> in <code>/data/haiwen/ccnet/ccnet.conf</code>

<pre>
SERVICE_URL = http://www.myseafile.com
</pre>

'''Note: '''If you later change the domain assigned to seahub, you also need to change the value of  <code>SERVICE_URL</code>.

=== Start Seafile/Seahub (when using the pre-compiled server package) ===

Assume you have followed the steps in [[Download and Setup Seafile Server]], please run commands as follows:

<pre>
./seafile.sh start
./seahub.sh start-fastcgi
</pre>

=== Start Seafile/Seahub (when building seafile server from source) ===

Assume you have followed the steps of [[Build and Deploy Seafile Server from source]]. To start seafile, and start seahub in fastcgi mode, you should:

<pre>
seafile-admin start --fastcgi
</pre>

The default port is <code>8000</code>, to use another port, just append a <code>--port</code> argument:

<pre>
seafile-admin start --fastcgi --port [PORT]
</pre>

== Notes when Upgrading Seafile Server ==

When [[upgrading seafile server]], besides the normal steps you should take, there is one extra step to do: '''Update the path of the static files in your nginx/apache configuration'''. For example, assume your are upgrading seafile server 1.3.0 to 1.4.0, then:

```
    location /media {
        root /home/user/haiwen/seafile-server-1.4.0/seahub;
    }
```

== Deploy Seafile at Non-root domain ==

See [[Deploy Seafile Web at Non root domain]]
